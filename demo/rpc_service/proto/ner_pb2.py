# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ner.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ner.proto',
  package='ner',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\tner.proto\x12\x03ner\"\x14\n\x04Text\x12\x0c\n\x04text\x18\x01 \x01(\t\"\x1a\n\tTextBatch\x12\r\n\x05texts\x18\x01 \x03(\t\"C\n\x06\x45ntity\x12\r\n\x05value\x18\x01 \x01(\t\x12\r\n\x05start\x18\x02 \x01(\x05\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x05\x12\x0e\n\x06\x65ntity\x18\x04 \x01(\t\")\n\x08\x45ntities\x12\x1d\n\x08\x65ntities\x18\x01 \x03(\x0b\x32\x0b.ner.Entity\"6\n\rEntitiesBatch\x12%\n\x0e\x65ntities_batch\x18\x01 \x03(\x0b\x32\r.ner.Entities2Z\n\x03NER\x12.\n\x08TagTexts\x12\x0e.ner.TextBatch\x1a\x12.ner.EntitiesBatch\x12#\n\x07TagText\x12\t.ner.Text\x1a\r.ner.Entitiesb\x06proto3')
)




_TEXT = _descriptor.Descriptor(
  name='Text',
  full_name='ner.Text',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='ner.Text.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=38,
)


_TEXTBATCH = _descriptor.Descriptor(
  name='TextBatch',
  full_name='ner.TextBatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='texts', full_name='ner.TextBatch.texts', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=66,
)


_ENTITY = _descriptor.Descriptor(
  name='Entity',
  full_name='ner.Entity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='ner.Entity.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start', full_name='ner.Entity.start', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end', full_name='ner.Entity.end', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='entity', full_name='ner.Entity.entity', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=135,
)


_ENTITIES = _descriptor.Descriptor(
  name='Entities',
  full_name='ner.Entities',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entities', full_name='ner.Entities.entities', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=137,
  serialized_end=178,
)


_ENTITIESBATCH = _descriptor.Descriptor(
  name='EntitiesBatch',
  full_name='ner.EntitiesBatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entities_batch', full_name='ner.EntitiesBatch.entities_batch', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=180,
  serialized_end=234,
)

_ENTITIES.fields_by_name['entities'].message_type = _ENTITY
_ENTITIESBATCH.fields_by_name['entities_batch'].message_type = _ENTITIES
DESCRIPTOR.message_types_by_name['Text'] = _TEXT
DESCRIPTOR.message_types_by_name['TextBatch'] = _TEXTBATCH
DESCRIPTOR.message_types_by_name['Entity'] = _ENTITY
DESCRIPTOR.message_types_by_name['Entities'] = _ENTITIES
DESCRIPTOR.message_types_by_name['EntitiesBatch'] = _ENTITIESBATCH
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Text = _reflection.GeneratedProtocolMessageType('Text', (_message.Message,), dict(
  DESCRIPTOR = _TEXT,
  __module__ = 'ner_pb2'
  # @@protoc_insertion_point(class_scope:ner.Text)
  ))
_sym_db.RegisterMessage(Text)

TextBatch = _reflection.GeneratedProtocolMessageType('TextBatch', (_message.Message,), dict(
  DESCRIPTOR = _TEXTBATCH,
  __module__ = 'ner_pb2'
  # @@protoc_insertion_point(class_scope:ner.TextBatch)
  ))
_sym_db.RegisterMessage(TextBatch)

Entity = _reflection.GeneratedProtocolMessageType('Entity', (_message.Message,), dict(
  DESCRIPTOR = _ENTITY,
  __module__ = 'ner_pb2'
  # @@protoc_insertion_point(class_scope:ner.Entity)
  ))
_sym_db.RegisterMessage(Entity)

Entities = _reflection.GeneratedProtocolMessageType('Entities', (_message.Message,), dict(
  DESCRIPTOR = _ENTITIES,
  __module__ = 'ner_pb2'
  # @@protoc_insertion_point(class_scope:ner.Entities)
  ))
_sym_db.RegisterMessage(Entities)

EntitiesBatch = _reflection.GeneratedProtocolMessageType('EntitiesBatch', (_message.Message,), dict(
  DESCRIPTOR = _ENTITIESBATCH,
  __module__ = 'ner_pb2'
  # @@protoc_insertion_point(class_scope:ner.EntitiesBatch)
  ))
_sym_db.RegisterMessage(EntitiesBatch)



_NER = _descriptor.ServiceDescriptor(
  name='NER',
  full_name='ner.NER',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=236,
  serialized_end=326,
  methods=[
  _descriptor.MethodDescriptor(
    name='TagTexts',
    full_name='ner.NER.TagTexts',
    index=0,
    containing_service=None,
    input_type=_TEXTBATCH,
    output_type=_ENTITIESBATCH,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TagText',
    full_name='ner.NER.TagText',
    index=1,
    containing_service=None,
    input_type=_TEXT,
    output_type=_ENTITIES,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_NER)

DESCRIPTOR.services_by_name['NER'] = _NER

# @@protoc_insertion_point(module_scope)
